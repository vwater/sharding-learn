spring:
  datasource:
    dynamic:
      primary: archive_order_2023 # 设置默认数据源
      strict: true # 开启严格模式，未找到对应数据源时抛出异常
      datasource:
        archive_order_2023:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3305/archive_order_2023?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
          username: root
          password: 123456
        archive_order_2024:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3305/archive_order_2024?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
          username: root
          password: 123456
        omni_order:
          type: com.zaxxer.hikari.HikariDataSource
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3305/omni_order?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
          username: root
          password: 123456
  shardingsphere:
    datasource:
      names: archive_order_2023,archive_order_2024,omni_order
      archive_order_2023:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3305/archive_order_2023?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: 123456
      archive_order_2024:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3305/archive_order_2024?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: 123456
      omni_order:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3305/omni_order?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
        username: root
        password: 123456
    props:
      sql-show: true
    rules:
      sharding:
        tables:
          order_header:
            actual-data-nodes: archive_order_$->{2023..2024}.order_header_$->{0..1}
            database-strategy:
              complex:
                sharding-columns: create_time
                sharding-algorithm-name: db-sharding-algorithm
            table-strategy:
              standard:
                #分片键
                sharding-column: tenant_id
                sharding-algorithm-name: tb-sharding-algorithm
          order_header_hot:
            actual-data-nodes: omni_order.order_header_hot_$->{0..1}
            table-strategy:
                standard:
                  sharding-column: tenant_id
                  sharding-algorithm-name: htb-sharding-algorithm
        sharding-algorithms:
          db-sharding-algorithm:
            type: CLASS_BASED
            props:
              strategy: complex
              algorithmClassName: com.djtu.vwater.config.DataSourceShardingComplexAlgorithm
          tb-sharding-algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              # 自定义算法全限定类名
              algorithmClassName: com.djtu.vwater.config.TableShardingAlgorithm
          htb-sharding-algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              # 自定义算法全限定类名
              algorithmClassName: com.djtu.vwater.config.HotTableShardingAlgorithm

# mybaits-plus配置
mybatis-plus:
  #  mapper-locations: classpath:mapper/*.xml
  mapper-locations: classpath:/mapper/*Mapper.xml
  #  mapper-locations: classpath*:/mapper/**/*Mapper.xml
  global-config:
    banner: false
    db-config:
      table-underline: true
      logic-delete-value: 1
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
    #开启sql日志
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl